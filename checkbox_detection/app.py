import streamlit as stimport cv2import numpy as npfrom io import BytesIOclass CheckboxDetector:    def __init__(self, image_content):        self.image = cv2.imdecode(np.frombuffer(image_content, np.uint8), cv2.IMREAD_COLOR)        # self.rescaled_img=None    def rescale_frame(self, frame, scale=0.8):        width = int(frame.shape[1] * scale)        height = int(frame.shape[0] * scale)        dimensions = (width, height)        return cv2.resize(frame, dimensions, interpolation=cv2.INTER_AREA)    def detect_checkboxes(self):        img = self.rescale_frame(self.image)        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)        blur = cv2.GaussianBlur(gray, (5, 5), cv2.BORDER_DEFAULT)        canny = cv2.Canny(blur, 80, 175)        cnts, _ = cv2.findContours(canny, cv2.RETR_LIST, cv2.CHAIN_APPROX_NONE)        for c in cnts:            x, y, w, h = cv2.boundingRect(c)            area = h * w            if h <= 27 and w <= 27 and area >= 625 and area != 675:                cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)        cv2.imwrite('checked_img.jpg',img)        return imgdef main():    st.title("Digital Wellbeing Tracker")    uploaded_file = st.file_uploader("Upload an image", type=["jpg", "jpeg", "png"])    show_button=st.button("Tracing Data")    if uploaded_file is not None:        if show_button:            detector = CheckboxDetector(uploaded_file.read())            detected_img = detector.detect_checkboxes()            st.image(detected_img, channels="BGR")if __name__ == "__main__":    main()